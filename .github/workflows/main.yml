on: push
jobs:
  build-x64:
    strategy:
      matrix:
        platform: [win32, darwin, linux]
        include:
          - platform: win32
            runner: windows-latest
          - platform: darwin
            runner: macos-latest
          - platform: linux
            runner: ubuntu-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16"
      # If you change the build commands below, also change on package.json for people who are compiling locally.
      - run: CGO_ENABLED=0 go build -o node_modules/.bin/caxa-stub src/stub.go && echo CAXACAXACAXA >> node_modules/.bin/caxa-stub
        shell: bash
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o node_modules/.bin/caxa-stub-arm64 src/stub.go && echo CAXACAXACAXA >> node_modules/.bin/caxa-stub-arm64
        if: matrix.platform == 'darwin'
      - uses: actions/upload-artifact@v2
        with:
          name: stub--${{ matrix.platform }}--x64
          path: "node_modules/.bin/caxa-stub"
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'darwin'
        with:
          name: stub--${{ matrix.platform }}--arm64
          path: "node_modules/.bin/caxa-stub-arm64"

  build-arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [arm--6, arm--7, arm64]
        include:
          - architecture: arm--6
            docker-platform: linux/arm/v6
            docker-image: arm32v6/golang:1.16-alpine # There is only an alpine image for this architecture
          - architecture: arm--7
            docker-platform: linux/arm/v7
            docker-image: arm32v7/golang:1.16
          - architecture: arm64
            docker-platform: linux/arm64/v8
            docker-image: arm64v8/golang:1.16
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Enable Docker Experimental Features (Required to use `docker run --platform` at time of commit)
        run: |
          echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker version -f '{{.Server.Experimental}}'
      - run: |
          docker run --rm --platform ${{ matrix.docker-platform }} -v $PWD:/caxa -w /caxa ${{ matrix.docker-image }} sh -c 'CGO_ENABLED=0 go build -o node_modules/.bin/caxa-stub src/stub.go && echo CAXACAXACAXA >> node_modules/.bin/caxa-stub'
      - uses: actions/upload-artifact@v2
        with:
          name: stub--linux--${{ matrix.architecture }}
          path: "node_modules/.bin/caxa-stub"

  test-x64:
    needs: build-x64
    strategy:
      matrix:
        platform: [win32, darwin, linux]
        include:
          - platform: win32
            runner: windows-latest
          - platform: darwin
            runner: macos-latest
          - platform: linux
            runner: ubuntu-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install-ci
      - uses: actions/download-artifact@v2
        with:
          name: stub--${{ matrix.platform }}--x64
      - run: file node_modules/.bin/caxa-stub
      # - run: npm test

  test-arm:
    needs: build-arm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [arm--6, arm--7, arm64]
        include:
          - architecture: arm--6
            docker-platform: linux/arm/v6
            docker-image: arm32v6/golang:1.16-alpine # There is only an alpine image for this architecture
          - architecture: arm--7
            docker-platform: linux/arm/v7
            docker-image: arm32v7/golang:1.16
          - architecture: arm64
            docker-platform: linux/arm64/v8
            docker-image: arm64v8/golang:1.16
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Enable Docker Experimental Features (Required to use `docker run --platform` at time of commit)
        run: |
          echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker version -f '{{.Server.Experimental}}'
      - uses: actions/download-artifact@v2
        with:
          name: stub--linux--${{ matrix.architecture }}
      - run: |
          docker run --rm --platform ${{ matrix.docker-platform }} -v $PWD:/caxa -w /caxa ${{ matrix.docker-image }} sh -c 'CGO_ENABLED=0 go build -o node_modules/.bin/caxa-stub src/stub.go && echo CAXACAXACAXA >> node_modules/.bin/caxa-stub'

  # npm-publish:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 15
  #         registry-url: https://registry.npmjs.org/
  #     - run: npm ci && npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
